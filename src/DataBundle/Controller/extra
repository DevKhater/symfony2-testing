<?php


    /**
     * @Route("api/band/new", name="api_band_form_new")
     * @Method("GET")
     * @ApiDoc(
     *  resource=true,
     *  description="Show Band New Form",
     * )
     */
    public function bandNewFormAction(Request $request)
    {
        $form = $this->getBandForm("POST", New Band());
        $view = $this->view($form, 200)
                ->setTemplate($this->templateDirectory . "apiForm.html.twig")
                ->setTemplateData(['action' => 'Create']);
        return $this->handleView($view);
    }
    
    /**
     * @Route("api/band/{slug}/edit", name="api_band_form_edit")
     * @Method("GET")
     * @ApiDoc(
     *  resource=true,
     *  description="Show Band Edit Form",
     * )
     */
    public function bandEditFormAction(Request $request)
    {

        $band = $this->getOr404($request->get('slug'));
        $form = $this->getBandForm("PUT", $band);
        $view = $this->view($form, 200)
                ->setTemplate($this->templateDirectory . "bandApiForm.html.twig")
                ->setTemplateData(['action' => 'Edit']);
        return $this->handleView($view);
    }

    private function getBandForm($method, $band)
    {
        switch ($method) {
            case "POST":
                $url = $this->generateUrl('api_band_create');
                break;
            case "PUT":
                $url = $this->generateUrl('api_band_update', ['slug' => $band->getSlug()]);
                break;
            case "POST":
                $url = $this->generateUrl('api_band_patch', ['slug' => $band->getSlug()]);
                break;
        }
        return $this->container->get($this->serviceEntity)->createBandForm($method, $band, $url);
    }

    
    
    
/**********************************************************************************************************************************************************/
    
    
    
    
    /**
     * @Route("api/concert/new", name="api_concert_form_new")
     * @Method("GET")
     * @ApiDoc(
     *  resource=true,
     *  description="Show Concert New Form",
     * )
     */
    public function concertNewFormAction(Request $request)
    {
        $form = $this->getConcertForm("POST", New Concert());
        $view = $this->view($form, 200)
            ->setTemplate($this->templateDirectory . "apiForm.html.twig")
            ->setTemplateData(['action' => 'Create']);
        return $this->handleView($view);
    }

        /**
     * @Route("api/concert/{id}/edit", name="api_concert_form_edit")
     * @Method("GET")
     * @ApiDoc(
     *  resource=true,
     *  description="Show Concert Edit Form",
     * )
     */
    public function concertEditFormAction(Request $request)
    {

        $concert = $this->getOr404($request->get('id'));
        $form = $this->getConcertForm("PUT", $concert);
        $view = $this->view($form, 200)
            ->setTemplate($this->templateDirectory . "concertApiForm.html.twig")
            ->setTemplateData(['action' => 'Edit']);
        return $this->handleView($view);
    }


    
    
    private function getConcertForm($method, $concert)
    {
        switch ($method) {
            case "POST":
                $url = $this->generateUrl('api_concert_create');
                break;
            case "PUT":
                $url = $this->generateUrl('api_concert_update', ['id' => $concert->getId()]);
                break;
            case "POST":
                $url = $this->generateUrl('api_concert_patch', ['id' => $concert->getId()]);
                break;
        }
        return $this->container->get($this->serviceEntity)->createConcertForm($method, $concert, $url);
    }

    
    
    /***********************************************************************************************************************************************************************/
    
    
    
    /**
     * @Route("api/location/new", name="api_location_form_new")
     * @Method("GET")
     * @ApiDoc(
     *  resource=true,
     *  description="Show Location New Form",
     * )
     */
    public function locationNewFormAction(Request $request)
    {
        $form = $this->getLocationForm("POST", New Location());
        $view = $this->view($form, 200)
                ->setTemplate($this->templateDirectory . "apiForm.html.twig")
                ->setTemplateData(['action' => 'Create']);
        return $this->handleView($view);
    }
    
    
    
    
    
    
    
    /**
     * @Route("api/location/{id}/edit", name="api_location_form_edit")
     * @Method("GET")
     * @ApiDoc(
     *  resource=true,
     *  description="Show Location Edit Form",
     * )
     */
    public function locationEditFormAction(Request $request)
    {

        $location = $this->getOr404($request->get('id'));
        $form = $this->getLocationForm("PUT", $location);
        $view = $this->view($form, 200)
                ->setTemplate($this->templateDirectory . "locationApiForm.html.twig")
                ->setTemplateData(['action' => 'Edit']);
        return $this->handleView($view);
    }


    private function getLocationForm($method, $location)
    {
        switch ($method) {
            case "POST":
                $url = $this->generateUrl('api_location_create');
                break;
            case "PUT":
                $url = $this->generateUrl('api_location_update', ['id' => $location->getId()]);
                break;
            case "POST":
                $url = $this->generateUrl('api_location_patch', ['id' => $location->getId()]);
                break;
        }
        return $this->container->get($this->serviceEntity)->createLocationForm($method, $location, $url);
    }

