<?php

namespace DataBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ConcertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConcertRepository extends EntityRepository
{

    public function findAllEntities($currentPage = 1, $limit)
    {

        $query = $this->createQueryBuilder('b')
                ->getQuery();

        $query->setFirstResult($limit * ($currentPage - 1)) // Offset
                ->setMaxResults($limit); // Limit

        $result = $query->getResult();
        return $result;
    }

    public function countAllEntities()
    {
        $query = $this->getEntityManager()
                ->createQuery(
                'SELECT  count(a) FROM DataBundle:Concert a');
        $count = $query->getSingleScalarResult();
        return $count;
    }

    public function paginate($dql, $page = 1, $limit = 5)
    {
        $paginator = new Paginator($dql);
        $paginator->getQuery()
                ->setFirstResult($limit * ($page - 1))
                ->setMaxResults($limit);

        return $paginator;
    }

    public function findFutureConcerts()
    {
        $today = new \DateTime();
        return $this->getEntityManager()
                        ->createQuery(
                                'SELECT a FROM DataBundle:Concert a WHERE a.date >= :now')
                        ->setParameter('now', $today)
                        ->getResult();
    }

    public function countOldConcerts()
    {
        $today = new \DateTime();
        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT count(a) FROM DataBundle:Concert a WHERE a.date < :now')
                ->setParameter('now', $today);
        $count = $query->getSingleScalarResult();
        return $count;
    }

    public function findOldConcerts($currentPage = 1, $limit)
    {
        $today = new \DateTime();
        return $this->getEntityManager()
                        ->createQuery(
                                'SELECT a FROM DataBundle:Concert a WHERE a.date < :now')
                        ->setParameter('now', $today)
                        ->setFirstResult($limit * ($currentPage - 1)) // Offset
                        ->setMaxResults($limit) // Limit
                        ->getResult();
    }

}
